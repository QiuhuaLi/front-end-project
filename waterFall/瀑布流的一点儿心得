瀑布流编码思路：
HTML：
	1、用一个div#main作为大盒子包含着这个瀑布流总体，主要作用是在页面中定位瀑布流，和对瀑布流中每个小盒子做定位坐标，position：relative
	2、让一个div.box设置绝对定位，定位每个小盒子的位置，并设置相关属性让盒子与盒子之间拉开距离。这里使用的是padding。因为padding在js中是计算在width中的
	3、再用一个div将img包起来，设置这个小小盒子的样式：边框，边框阴影，内边距。
	4、img，因为图片在一个div中会像文字一样，有一个自字边距，基线的问题，可以设置基线对齐方式来修正，也可将图片的显示方式设置为：block；
js：用了原生js和jQuery分别实现这个瀑布流功能，但思路是一样的。但是jQuery对选择器进行了高度的简化，且提供了大量的方法。因此在记住方法如何使用的情况下，会比原生js简单些，在代码量上。
思路：
	1、计算每行能摆放的照片的个数，我们规定每个小盒子的宽度一致。
	2、从第二行开始，找最短的那一列，将当前照片放到那一列的下边。
	3、给window对象添加滚动事件，绑定事件函数，当页面滚动到一定的位置就加载图片。
缺点：会一直加载图片，永远滚不到底部
改进：设定一个页面高度，当最短的那一列到达这个距离时停止加载数据。方法二:记录触发滚动时间次数，若次数小于n次，就动态加载图片否则不加载（实现起来也很简单）
